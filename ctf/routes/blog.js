var express = require('express');
var router = express.Router();
const axios = require('axios');

blog_secret = "V2UncmUgbm8gc3RyYW5nZXJzIHRvIGxvdmUKWW91IGtub3cgdGhlIHJ1bGVzIGFuZCBzbyBkbyBJIChkbyBJKQpBIGZ1bGwgY29tbWl0bWVudCdzIHdoYXQgSSdtIHRoaW5raW5nIG9mCllvdSB3b3VsZG4ndCBnZXQgdGhpcyBmcm9tIGFueSBvdGhlciBndXkKSSBqdXN0IHdhbm5hIHRlbGwgeW91IGhvdyBJJ20gZmVlbGluZwpHb3R0YSBtYWtlIHlvdSB1bmRlcnN0YW5k"

/* GET blog page. */
router.get('/', function(req, res, next) {
    res.render('blog',
      { 
        title: 'My New Blog',
        page: 'home'
      });
  });

/* GET blog page. */
router.get('/home', function(req, res, next) {
  res.render('blog',
    { 
      title: 'My New Blog',
      page: 'home'
    });
});

/* GET blog register. */
router.get('/register', function(req, res, next) {
  res.render('blog',
    { 
      title: 'My New Blog - Register',
      page: 'register'
    });
});

/* POST blog register. */
router.post('/register', function(req, res, next) {
  email = req.body.email;
  if (email == "superUser75@gmail.com") {
    res.render('blog',
      { 
        title: 'My New Blog - Register',
        page: 'register',
        error: "That email is already in use."
      });
      return;
  }
  res.render('blog',
    { 
      title: 'My New Blog - Register',
      page: 'register',
      error: "Account creation is currently disabled."
    });
});

/* GET blog login. */
router.get('/login', function(req, res, next) {
  res.render('blog',
    { 
      title: 'My New Blog - Login',
      page: 'login'
    });
});

/* POST blog login. */
router.post('/login', function(req, res, next) {
  // set cookie if not set
  let attempts = req.cookies['blog_login_attempts'];
  if (!req.cookies['blog_login_attempts']) {
    res.cookie("blog_login_attempts", 0);
    attempts = 0;
  }
  res.cookie("blog_login_attempts", parseInt(attempts) + 1);
  res.render('blog',
    { 
      title: 'My New Blog - Login',
      page: 'login',
      error: "Invalid username or password",
      attempts: attempts
    });
});

/* GET blog password reset. */
router.get('/reset-password', function(req, res, next) {
  secret = req.query.secret
  if (secret == blog_secret) {
    res.render('blog',
      { 
        title: 'My New Blog - Reset Password',
        page: 'reset-password',
        flag: "ttu{H0st_He4d3rs_4r3_4w3s0m3}"
      });
    return
  }
  res.render('blog',
    { 
      title: 'My New Blog - Reset Password',
      page: 'reset-password'
    });
});

/* POST blog password reset. */
router.post('/reset-password', function(req, res, next) {
  email = req.body.email
  host = req.get('host')
  if (email != "superUser75@gmail.com") {
    res.render('blog',
      { 
        title: 'My New Blog - Reset Password',
        page: 'reset-password',
        error: "Email not found"
      });
    return
  }
  link = "http://" + req.get('host') + "/blog/reset-password?secret=" + blog_secret
  try {
    axios.get(link, {timeout: 1000, validateStatus: false})
  } catch (error) {
    // do nothing
  }
  res.render('blog',
    { 
      title: 'My New Blog - Reset Password',
      page: 'reset-password',
      success: "Email sent"
    });
});

module.exports = router;
